#############################################################
# Pipeline Defenitions
#############################################################

name: Terraform Plan

on:
  workflow_dispatch:

jobs:
  terraform_validation:
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: dummy


    steps:
    - name: Checkout code 
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.6
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Set AWS credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_KEY }}" >> $GITHUB_ENV
  

    - name: Terraform Init
      working-directory: ./terraform/customer-onboard
      run: terraform init

    - name: Terraform unset
      working-directory: ./terraform/customer-onboard
      run: echo "TF_WORKSPACE=" >> $GITHUB_ENV

    - name: Select or Create Workspace
      working-directory: ./terraform/customer-onboard
      run: terraform workspace list

    - name: Select or Create Workspace
      working-directory: ./terraform/customer-onboard
      run: terraform workspace select -or-create ${{ vars.CUSTOMER_NAME }}

    - name: Terraform Validate
      working-directory: ./terraform/customer-onboard
      run: terraform validate

  terraform_plan:
    needs: terraform_validation
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: dummy

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.6
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Set AWS credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_KEY }}" >> $GITHUB_ENV

    - name: Terraform Init
      working-directory: ./terraform/customer-onboard
      run: terraform init

    - name: Terraform unset
      working-directory: ./terraform/customer-onboard
      run: echo "TF_WORKSPACE=" >> $GITHUB_ENV

    - name: Select or Create Workspace
      working-directory: ./terraform/customer-onboard
      run: terraform workspace select ${{ vars.CUSTOMER_NAME }}

    - name: Create *.auto.tfvars
      working-directory: ./terraform/customer-onboard
      run: |
        echo "aws_access_key=\"${{ env.AWS_ACCESS_KEY_ID }}\"" >> terraform.auto.tfvars
        echo "aws_secret_key=\"${{ env.AWS_SECRET_ACCESS_KEY }}\"" >> terraform.auto.tfvars
        echo "CUSTOMER_NAME=\"${{ vars.CUSTOMER_NAME }}\"" >> terraform.auto.tfvars


    - name: Terraform Plan
      working-directory: ./terraform/customer-onboard
      run: terraform plan